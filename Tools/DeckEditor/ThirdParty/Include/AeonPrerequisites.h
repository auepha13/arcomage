/*
* Part of the Aeon Framework
* -----------------------------------------------------------------------------
* Aeon Forward Declaration Headeer
*
* File:		AeonPrerequisites.h
  Desc.:	Forward declarations of commonly used classes.
*
* Copyright (c) 2009-2011, gatewayheaven.com. 
* Licensed under the Boost Software License.
*
* -----------------------------------------------------------------------------
* Permission is hereby granted, free of charge, to any person or organization
* obtaining a copy of the software and accompanying documentation covered by
* this license (the "Software") to use, reproduce, display, distribute,
* execute, and transmit the Software, and to prepare derivative works of the
* Software, and to permit third-parties to whom the Software is furnished to
* do so, all subject to the following:
* 
* The copyright notices in the Software and this entire statement, including
* the above license grant, this restriction and the following disclaimer,
* must be included in all copies of the Software, in whole or in part, and
* all derivative works of the Software, unless such copies or derivative
* works are solely in the form of machine-executable object code generated by
* a source language processor.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
* -----------------------------------------------------------------------------
*/
#ifndef _AeonPrerequisites_h_
#define _AeonPrerequisites_h_

#include "AeonSettings.h"

typedef unsigned char uchar;
typedef unsigned short ushort;
typedef unsigned int uint;
typedef unsigned long ulong;

namespace Aeon {
	// Forward declarations

	// OGRE related
	class AeonOgreSystem;
	// .....
	
	//-------------------------------------------------------------------------
	// Trace function
	#ifdef _MSC_VER
	#define trace()       static const char *INTERNAL_FUNCNAME = __FUNCTION__; \
		AutomaticGuardUnguard INTERNAL_AUTOMATICGUARDUNGUARD(INTERNAL_FUNCNAME,__LINE__,__FILE__);
	#else
	#if __STDC_VERSION__ < 199901L
	# if __GNUC__ >= 2
	#  define __func__ __FUNCTION__
	# else
	#  define __func__ "<unknown>"
	# endif

	#endif
	#define trace() AutomaticGuardUnguard INTERNAL_AUTOMATICGUARDUNGUARD(__func__,__LINE__,__FILE__);
	#endif
	//-------------------------------------------------------------------------
	// Debug assertions and trace functions
	#ifdef _DEBUG
	#define validate(Expression)  if(!(Expression)) { throw ValidationException(#Expression); }
	#define verify(Expression)	  if(!(Expression)) { throw ValidationException(#Expression); }
	#ifdef _MSC_VER
	#define debug_trace()    static const char *INTERNAL_FUNCNAME = __FUNCTION__ ;    \
							AutomaticGuardUnguard INTERNAL_AUTOMATICGUARDUNGUARD(INTERNAL_FUNCNAME);
	#elif
	#if __STDC_VERSION__ < 199901L
	# if __GNUC__ >= 2
	#  define __func__ __FUNCTION__
	# else
	#  define __func__ "<unknown>"
	# endif

	#endif
	#define debug_trace() AutomaticGuardUnguard INTERNAL_AUTOMATICGUARDUNGUARD(__func__,__LINE__,__FILE__);
	#endif
	#else
	//-------------------------------------------------------------------------
	// Release Assertions and Guards
	//
	
	#define validate(Expression)
	#define verify(Expression) (Expression)
	#define debug_trace()
	#endif


}

#endif
